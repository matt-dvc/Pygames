import pygame
import time
import random

pygame.init()

display_width = 800
display_height = 600
game_tick = 60
black = (0, 0, 0)
white = (255, 255, 255)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)
highscore = 0

gameDisplay = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption('A bit Racey!')
clock = pygame.time.Clock()


carImg = pygame.image.load('files/car.png')
car_x, car_y = 60, 100


def things_dodged(count, highscore, level):
    font = pygame.font.SysFont(None, 50)
    text = font.render('Score: '+str(count), True, red)
    text2 = font.render('Best: '+str(highscore), True, red)
    text3 = font.render('Level: '+str(level), True, red)
    gameDisplay.blit(text, (10, 10))
    gameDisplay.blit(text2, (display_width-150, 10))
    gameDisplay.blit(text3, (10, 60))


def things(thingx, thingy, thingw, thingh, color):
    pygame.draw.rect(gameDisplay, color, [thingx, thingy, thingw, thingh])


def car(x, y, x_change):
    gameDisplay.blit(pygame.transform.rotate(carImg, -x_change), (x, y))
   # return x, y


def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()


def message_display(text):
    largeText = pygame.font.Font('freesansbold.ttf', 72)
    TextSurf, TextRect = text_objects(text, largeText)
    TextRect.center = (int(display_width/2), int(display_height/2))
    gameDisplay.blit(TextSurf, TextRect)
    pygame.display.update()
    time.sleep(2)

    game_loop()


def collision_detection(x, y, car_x, car_y, thing_startx, thing_starty, thing_width, thing_height):
    if y < thing_starty+thing_height and y+car_y > thing_starty:
        if x > thing_startx and x < thing_startx+thing_width or x+car_x > thing_startx and x+car_x < thing_startx+thing_width:
            crash()


def crash():
    message_display('You crashed!')


def game_intro():

    intro = True

    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        gameDisplay.fill(white)
        largeText = pygame.font.Font('freesansbold.ttf', 120)
        TextSurf, TextRect = text_objects("A bit Racey!", largeText)
        TextRect.center = (int(display_width/2), int(display_height/2))
        gameDisplay.blit(TextSurf, TextRect)
        pygame.display.update()
        clock.tick(15)


def game_loop():
    gameExit = False
    global highscore
    score = 0
    level = 1
    x_change = 0
    x = int(display_width / 2 - 30)
    y = int(display_height * 0.8 - 50)

    thing_speed = 5
    thing_width = 200
    thing_height = 50
    thing_startx = random.randrange(0, display_width-thing_width)
    thing_starty = -100

    while not gameExit:

        ### Key Logic START ###

        keys = pygame.key.get_pressed()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    quit()

            if event.type == pygame.KEYUP:
                pass

        if keys[pygame.K_LEFT]:
            x_change = int(-1000 / game_tick * 0.75)
        elif keys[pygame.K_RIGHT]:
            x_change = int(1000 / game_tick * 0.75)
        else:
            x_change = 0

        ### Key logic END ###

        x += x_change

        gameDisplay.fill((80, 80, 80))

        things(thing_startx, thing_starty, thing_width, thing_height, black)
        thing_starty += thing_speed

        car(int(x), int(y), x_change)
        things_dodged(score, highscore, level)

        ### Game logic START ###

        if x + car_x > display_width or x < 0:
            crash()

        if thing_starty > display_height+thing_height:
            thing_starty = -thing_height
            thing_startx = random.randrange(0, display_width-thing_width)
            score += 1
            if score % 5 == 0:
                thing_speed += 1
                level += 1
            if score > highscore:
                highscore = score

            things(thing_startx, thing_starty,
                   thing_width, thing_height, black)

        collision_detection(x, y, car_x, car_y, thing_startx,
                            thing_starty, thing_width, thing_height)

        ### Game logic END ###

        pygame.display.update()
        clock.tick(game_tick)


# game_intro()
game_loop()
pygame.quit()
